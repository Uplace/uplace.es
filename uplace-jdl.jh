  entity Property {
      title String required
      created ZonedDateTime required,
      updated ZonedDateTime,
      description TextBlob,
      transaction TransactionType required,
      reference String required,
      priceSell Double,
      priceRent Double,
      priceTransfer Double,
      yearConstruction Integer min(500),
      newCreation Boolean,
      visible Boolean,
      surface Integer
      // CATEGORY

  }

  enum TerrainType {
      RESIDENTIAL, URBAN, RUSTIC, INDUSTRIAL
  }

  enum TransactionType {
      RENT, BUY, TRANSFER, RENT_BUY
  }

  enum ApartmentType {
      HOUSES, RURALS, FLATS, APARTMENTS, TOWERS, LOFTS
  }

  enum Select {
      YES, NO, UNDEFINED
  }

  enum ParkingType {
      CAR, MOTO, OTHER
  }

  enum BusinessType {
      PUB, HOTEL, OTHERS
  }

  entity Apartment {
      numberBedrooms Integer,
      numberBathrooms Integer,
      m2Edified Integer,
      m2Usable Integer,
      height Integer,
      elevator Select,
      ac Select,
      heat Select,
      parking Select,
      terrace Select,
      balcony Select,
      surfaceTerrace Integer,
      surfaceSaloon Integer,
      type ApartmentType,
      office Select,
      kitchenOffice Select,
      storage Select,
      sharedPool Select,
      nearTransport Select,
      reformed Select,
      energyCertificate EnergyCertificate,
      certificateHabitability  Select,
  }

  entity Office {
      bathrooms String,
      floors Integer,
      terrace Select,
      office Select,
      storage Select,
      storageSurface Integer,
      officesSurface Integer,
      ac Select,
      heat Select,
      energyCertificate EnergyCertificate
  }

  entity Agent {
      firstName String,
      lastName String
      phone String,
      photo ImageBlob
  }

  entity Parking {
      parkingType ParkingType,
      nearTransport Select
      surveillance Select

  }

  entity Building {
      type BuildingType,
      solarSurface Integer,
      m2Edified Integer,
      floorsSR Integer,
      floorsBR Integer,
      energyCertificate EnergyCertificate
  }

  enum BuildingType {
      RESIDENTIAL, HOTEL, INDUSTRIAL
  }

  entity Hotel {
      solarSurface Integer,
      m2Edified Integer,
      numberRooms Integer,
      operator Select,
      pool Select,
      spa Select,
      conferenceRoom Select,
      floorsSR Integer,
      floorsBR Integer,
      energyCertificate EnergyCertificate
  }

  entity IndustrialPlant {
      solarSurface Integer,
      numberRooms Integer,
      m2Offices Integer,
      m2Storage Integer,
      heightFree Integer,
      numberDocks Integer,
      energyCertificate EnergyCertificate
  }

  entity Establishment {
      m2Facade Integer,
      bathroom Select,
      use UseEstablishment,
      energyCertificate EnergyCertificate
  }

  enum UseEstablishment {
      RESTAURANT, PUB, SHOP, OTHER
  }

  enum EnergyCertificate {
      A, B, C, D, E, F, G, UNDEFINED
  }

  entity Terrain {
      m2Buildable Integer,
      buildable Boolean,
      buildableDepth Integer,
      floorsSR Integer,
      floorsBR Integer,
      constructionCoefficient Double,
      type TerrainType
  }

  entity Location {
      latitude Double,
      postalCode String,
      longitude Double,
      city String,
      fullAddress String,
      hide Boolean,
      urlGMaps String

  }

  entity Business {
      type BusinessType,
      numberBathrooms Integer,
      elevator Select,
      ac Select,
      heat Select,
      surfaceTerrace Integer,
      surfaceGarden Integer,
      numberOffice Integer,
      surfaceSaloon Integer,
      height Integer,
      pool Select,
  }

  entity Notification {
      title String required,
      content TextBlob,
      creation ZonedDateTime required,
      type NotificationType required,
      reference String,
      token String,
      read Boolean required
  }

  entity Request {
      reference String,
      date ZonedDateTime,
      origin RequestOrigin,
      firstName String,
      lastName String,
      email String,
      requestStatus RequestStatus,
      message TextBlob
  }

  enum RequestOrigin {
    WEB, ANDROID, IOS, OTHER
  }

  enum RequestStatus {
    OPEN, CLOSED, PENDING
  }

  enum NotificationType{
      NOTIFICATION, REQUEST, ALERT
  }

  entity Company {
      name String,
      photo String,
      phone String,
      email String,
      description TextBlob,
      nif String
  }

  /* PHOTO */

  entity Photo {
      name String required,
      description String,
      photo ImageBlob required,
      thumbnail Boolean required
  }

  entity RealEstate {
      name String required,
      nif String,
      reference String
  }

  relationship OneToMany {
      // One Property can own many photos
      Property{photo(name)} to Photo{property(reference)},
      RealEstate{property(reference)} to Property{realEstate(reference)},
      Property{request(reference)} to Request{property(reference)}
  }

  relationship ManyToOne {
      Notification{user(login) required} to User{notification(title) required}
  }

  relationship ManyToMany {
      Property{manager(firstName)} to Agent{property(title)}
  }

  relationship OneToOne {
      Agent{user(login) required} to User{agent(firstName) required},
      Property{location(id) required} to Location{property(reference) required},
      Company{location(id)} to Location
  }

  paginate Notification, Request with pagination

  service Agent, Notification, Property, Company, RealEstate, Request with serviceClass

  filter Property
